{"ast":null,"code":"import Joi from 'joi';\nconst registerSchema = Joi.object({\n  firstName: Joi.string().required(),\n  lastName: Joi.string().required(),\n  emailOrMobile: Joi.alternatives().try(Joi.string().email({\n    tlds: {\n      allow: ['com', 'net']\n    }\n  }).required(), Joi.string().length(10).pattern(/^[0-9]+$/) // new RegExp('^[0-9]+$')\n  .required()),\n  password: Joi.string().pattern(new RegExp('^[a-zA-Z0-9]{6,16}$')).required(),\n  confirmPassword: Joi.ref('password')\n}).with('password', 'confirmPassword');\nexport const validateRegister = input => registerSchema.validate(input);\nconst loginSchema = Joi.object({\n  emailOrMobile: Joi.alternatives().try(Joi.string().email({\n    tlds: {\n      allow: ['com', 'net']\n    }\n  }).required(), Joi.string().length(10).pattern(/^[0-9]+$/) // new RegExp('^[0-9]+$')\n  .required()),\n  password: Joi.string().pattern(new RegExp('^[a-zA-Z0-9]{6,16}$')).required()\n});\nexport const validatelogin = input => loginSchema.validate(input);","map":{"version":3,"names":["Joi","registerSchema","object","firstName","string","required","lastName","emailOrMobile","alternatives","try","email","tlds","allow","length","pattern","password","RegExp","confirmPassword","ref","with","validateRegister","input","validate","loginSchema","validatelogin"],"sources":["/Users/jeffymonday/Desktop/meowmeowshop/Frontend/src/validations/userValidate.js"],"sourcesContent":["import Joi from 'joi';\n\nconst registerSchema = Joi.object({\n\tfirstName: Joi.string().required(),\n\tlastName: Joi.string().required(),\n\temailOrMobile: Joi.alternatives().try(\n\t\tJoi.string()\n\t\t\t.email({ tlds: { allow: ['com', 'net'] } })\n\t\t\t.required(),\n\t\tJoi.string()\n\t\t\t.length(10)\n\t\t\t.pattern(/^[0-9]+$/) // new RegExp('^[0-9]+$')\n\t\t\t.required()\n\t),\n\tpassword: Joi.string().pattern(new RegExp('^[a-zA-Z0-9]{6,16}$')).required(),\n\tconfirmPassword: Joi.ref('password'),\n}).with('password', 'confirmPassword');\n\nexport const validateRegister = (input) => registerSchema.validate(input);\n\nconst loginSchema = Joi.object({\n\temailOrMobile: Joi.alternatives().try(\n\t\tJoi.string()\n\t\t\t.email({ tlds: { allow: ['com', 'net'] } })\n\t\t\t.required(),\n\t\tJoi.string()\n\t\t\t.length(10)\n\t\t\t.pattern(/^[0-9]+$/) // new RegExp('^[0-9]+$')\n\t\t\t.required()\n\t),\n\tpassword: Joi.string().pattern(new RegExp('^[a-zA-Z0-9]{6,16}$')).required(),\n});\n\nexport const validatelogin = (input) => loginSchema.validate(input);\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,MAAMC,cAAc,GAAGD,GAAG,CAACE,MAAJ,CAAW;EACjCC,SAAS,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,EADsB;EAEjCC,QAAQ,EAAEN,GAAG,CAACI,MAAJ,GAAaC,QAAb,EAFuB;EAGjCE,aAAa,EAAEP,GAAG,CAACQ,YAAJ,GAAmBC,GAAnB,CACdT,GAAG,CAACI,MAAJ,GACEM,KADF,CACQ;IAAEC,IAAI,EAAE;MAAEC,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR;IAAT;EAAR,CADR,EAEEP,QAFF,EADc,EAIdL,GAAG,CAACI,MAAJ,GACES,MADF,CACS,EADT,EAEEC,OAFF,CAEU,UAFV,EAEsB;EAFtB,CAGET,QAHF,EAJc,CAHkB;EAYjCU,QAAQ,EAAEf,GAAG,CAACI,MAAJ,GAAaU,OAAb,CAAqB,IAAIE,MAAJ,CAAW,qBAAX,CAArB,EAAwDX,QAAxD,EAZuB;EAajCY,eAAe,EAAEjB,GAAG,CAACkB,GAAJ,CAAQ,UAAR;AAbgB,CAAX,EAcpBC,IAdoB,CAcf,UAde,EAcH,iBAdG,CAAvB;AAgBA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAWpB,cAAc,CAACqB,QAAf,CAAwBD,KAAxB,CAApC;AAEP,MAAME,WAAW,GAAGvB,GAAG,CAACE,MAAJ,CAAW;EAC9BK,aAAa,EAAEP,GAAG,CAACQ,YAAJ,GAAmBC,GAAnB,CACdT,GAAG,CAACI,MAAJ,GACEM,KADF,CACQ;IAAEC,IAAI,EAAE;MAAEC,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR;IAAT;EAAR,CADR,EAEEP,QAFF,EADc,EAIdL,GAAG,CAACI,MAAJ,GACES,MADF,CACS,EADT,EAEEC,OAFF,CAEU,UAFV,EAEsB;EAFtB,CAGET,QAHF,EAJc,CADe;EAU9BU,QAAQ,EAAEf,GAAG,CAACI,MAAJ,GAAaU,OAAb,CAAqB,IAAIE,MAAJ,CAAW,qBAAX,CAArB,EAAwDX,QAAxD;AAVoB,CAAX,CAApB;AAaA,OAAO,MAAMmB,aAAa,GAAIH,KAAD,IAAWE,WAAW,CAACD,QAAZ,CAAqBD,KAArB,CAAjC"},"metadata":{},"sourceType":"module"}